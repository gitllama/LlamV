<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
	var Type = new List<string>()
	{
		"Byte",
		"UInt16",
		"UInt32",
		"UInt64",
		"Int16",
		"Int32",
		"Int64",
		"Single",
		"Double"
	};
	//.Where(x=>x!="Int32" && x!="Double")
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Runtime.InteropServices;
using System.Threading;
using System.Threading.Tasks;

using Pixels;

namespace Pixels.Math
{
    public static partial class PixelFilter
    {
		public static Pixel<T> t<T>(this Pixel<T> src) where T : struct, IComparable
		{
			<# foreach (var T in Type){ #>
if(typeof(T) == typeof(<#= T #>)) return src = null;
			else <# } #> return null;

		}
    }
}