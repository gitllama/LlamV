<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
	var Type = new List<string>()
	{
		"Byte",
		"UInt16",
		"UInt32",
		"UInt64",
		"Int16",
		"Int32",
		"Int64",
		"Single",
		"Double"
	};
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using System.IO;
using System.Runtime.InteropServices;
using System.Threading;

using System.Reflection;
using System.Text.RegularExpressions;
using System.Linq.Expressions;

using System.IO.Compression;
using System.Threading.Tasks;

namespace Pixels.Stream
{
    public static partial class PixelStream
    {
        private static void WriteArray<T>(T[] src, FileStream sw) where T : struct, IComparable
        {
			switch((object)src)
			{
<# foreach (var T in Type){ #>
				case <#= T #>[] n:
					foreach (var i in n)
					{
						sw.Write(BitConverter.GetBytes(i), 0, sizeof(<#= T #>));
					}
					break;
<# } #>
				default:
					break;
            }
        }
    }
}